head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.08.08.11.36.05;	author peterj;	state Exp;
branches;
next	;


desc
@CMATH 1989 code
@


1.1
log
@Initial revision
@
text
@/* splinet.c
   Sample test driver for the cubic spline routines. */

#include <stdio.h>
#include "cmath.h"

main()
{
#define ndim 20
double x[ndim], y[ndim];
double b[ndim], c[ndim], d[ndim];
double xx, f, dfdxx;
int    n, i, last, flag;

printf ("\n\nSample driver for spline(), seval() & deriv()\n\n");
printf ("Fit a spline to f(x) = x**3, x = 1, 2,  ... 10.\n");

n = 10;
for (i = 0; i < n; ++i)
   {
   x[i] = i + 1;
   y[i] = x[i] * x[i] * x[i];
   }
x[1] = x[3];  /* put one out of order */

spline (n, 1, 1, 3.0, 300.0, x, y, b, c, d, &flag);

if (flag != 0)
   {
   printf ("flag = %d\n", flag);
   exit(1);
   }
printf ("Spline fitted, flag = %d \n\n", flag);
printf ("Now evaluate spline and derivative at sample points ...\n");
printf ("\n     x           f           dfdx\n");
printf ("------------------------------------\n");

last = 4;
xx   = x[n-1] + 1.0;
while (xx > x[0])
   {
   xx   -= 2.5;
   f     = seval (n, xx, x, y, b, c, d, &last);
   dfdxx = deriv (n, xx, x, b, c, d, &last);
   printf ("%10.3f  %10.3f  %10.3f \n", xx, f, dfdxx);
   }

}  /* end of splined */
@
