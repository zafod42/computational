head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.08.08.11.36.05;	author peterj;	state Exp;
branches;
next	;


desc
@CMATH 1989 code
@


1.1
log
@Initial revision
@
text
@/* bandfacd.c
   Example program to exercise banded matrix equation solver.
*/

#include <math.h>
#include <stdio.h>
#include "cmath.h"

#define  ndim  20
#define  INDX(i, j)  (i) * ndim + (j)

main ()
{
static double a[ndim*ndim], b[ndim];
int    n, nlow, nup, i, flag;
double rhs;

printf ("\n\n  --- CMATH --- Design Software 1989\n");
printf ("\nSample driver for bandfac() and bandslv()...\n");

n    = 15;
nlow = 1;
nup  = 2;

for (i = 0; i < n; ++i)
   {
   a[INDX(i,0)] = 1.0;
   a[INDX(i,1)] = 4.0;
   a[INDX(i,2)] = 1.0;
   a[INDX(i,3)] = 1.0;
   b[i]  = (double) (i+1);
   }
a[INDX(0,0)]   = 0.0;    /* ignored anyway */
a[INDX(n-2,3)] = 0.0;
a[INDX(n-1,2)] = 0.0;
a[INDX(n-1,3)] = 0.0;

bandfac (a, ndim, n, nlow, nup, &flag);
printf ("\n%s\n", cmathmsg(BANDFAC_C, flag));

if (flag == 0)
   {
   bandslv (a, ndim, n, nlow, nup, b);

   printf ("\nSolution ...\n");
   printf ("   j      x[i]       rhs[j]\n");
   printf ("-------------------------------\n");
   for (i = 0; i < n; ++i)
      {
      /* reconstruct right hand side */
      if (i == 0)        rhs = 4.0 * b[0] + b[1] + b[2];
      else if (i == n-2) rhs = b[n-3] + 4.0 * b[n-2] + b[n-1];
      else if (i == n-1) rhs = b[n-2] + 4.0 * b[n-1];
      else               rhs = b[i-1] + 4.0 * b[i] + b[i+1] + b[i+2];
      printf ("%3d  %10.5f  %10.5f\n", i, b[i], rhs);
      }
   }
return (0);
} /* ... end of main */

@
