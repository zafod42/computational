head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.08.08.11.36.05;	author peterj;	state Exp;
branches;
next	;


desc
@CMATH 1989 code
@


1.1
log
@Initial revision
@
text
@/* tridiagd.c
   Example program to exercise tridiagonal equation solver.
*/

#include <math.h>
#include <stdio.h>
#include "cmath.h"

main ()
{
#define  ndim  20
double d[ndim], ld[ndim], ud[ndim], x[ndim];
int    n, i, flag;
double rhs;

printf ("\n\n  --- CMATH --- Design Software 1989\n");
printf ("\nSample driver for tridiag() and trisolve()...\n");

n = 15;

for (i = 0; i < n; ++i)
   {
   ld[i] = 1.0;
   d[i]  = 3.0;
   ud[i] = 1.0;
   x[i]  = (double) (i+1);
   }
ld[0]   = 0.0;    /* ignored anyway */
ud[n-1] = 0.0;

tridiag (n, ld, d, ud, &flag);
printf ("\n%s\n", cmathmsg(TRIDIAG_C, flag));

if (flag == 0)
   {
   trisolve (n, ld, d, ud, x, &flag);
   printf ("\n%s\n", cmathmsg(TRISOLVE_C, flag));

   printf ("\nSolution ...\n");
   printf ("   j      x[i]       rhs[j]\n");
   printf ("-------------------------------\n");
   for (i = 0; i < n; ++i)
      {
      /* reconstruct right hand side */
      if (i == 0)        rhs = 3.0 * x[0] + 1.0 * x[1];
      else if (i == n-1) rhs = 1.0 * x[n-2] + 3.0 * x[n-1];
      else               rhs = 1.0 * x[i-1] + 3.0 * x[i] + 1.0 * x[i+1];
      printf ("%3d  %10.5f  %10.5f\n", i, x[i], rhs);
      }
   }
return (0);
} /* ... end of main */
@
