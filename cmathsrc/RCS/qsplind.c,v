head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.08.08.11.36.05;	author peterj;	state Exp;
branches;
next	;


desc
@CMATH 1989 code
@


1.1
log
@Initial revision
@
text
@/* qsplind.c
   Exercise the quadratic spline routine.
   */

#include <math.h>
#include "qsplin.c"

main ()
{
#define  M  30
double y[M], v[M], w[M];
double pi, delx, yy, dy, x;
int n, j, flag;

pi = 4.0 * atan(1.0);
n = 11;
delx = 2.0 * pi / (n-1);

printf ("Data points\n");
for (j = 0; j < n; ++j)
   {
   y[j] = sin(delx * j);
   printf ("%d  %10.4f\n", j, y[j]);
   }

QSplin (y, v, n, &flag, w);
printf ("\nFlag = %d\n", flag);

printf ("\nBreak-points\n");
for (j = 0; j < n-3; ++j)
   {
   printf ("%d  %10.4f\n", j, v[j]);
   }

do {
   printf ("\nx = ");
   scanf ("%lf", &x);
   QSplEval (x, &yy, y, v, n, 0, &flag);
   QSplEval (x, &dy, y, v, n, 1, &flag);
   printf ("y = %f,  dy/dx = %f\n", yy, dy);
   }  while (x > 0.0);

}  /* ... end of main */
@
