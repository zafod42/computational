head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.08.08.11.36.05;	author peterj;	state Exp;
branches;
next	;


desc
@CMATH 1989 code
@


1.1
log
@Initial revision
@
text
@/* qrd.c
   Sample driver for qr().
*/

#include <math.h>
#include <stdio.h>
#include "cmath.h"

main ()
{
#define  nm  4
#define  INDX(i, j)  (i) * nm + (j)
static double a[nm * nm], wr[nm], wi[nm];
int    n, flag, j;

printf ("\n\n  --- CMATH --- Design Software 1989\n");
printf ("\nSample program for qr() eigenvalue solver.\n");

n  = 4;
a[INDX(0,0)] =  4.0;  a[INDX(0,1)] = -5.0;
a[INDX(0,2)] =  0.0;  a[INDX(0,3)] =  3.0;
a[INDX(1,0)] =  0.0;  a[INDX(1,1)] =  4.0;
a[INDX(1,2)] = -3.0;  a[INDX(1,3)] = -5.0;
a[INDX(2,0)] =  5.0;  a[INDX(2,1)] = -3.0;
a[INDX(2,2)] =  4.0;  a[INDX(2,3)] =  0.0;
a[INDX(3,0)] =  3.0;  a[INDX(3,1)] =  0.0;
a[INDX(3,2)] =  5.0;  a[INDX(3,3)] =  4.0;

qr (nm, n, a, wr, wi, &flag);
printf ("\n%s\n", cmathmsg(QR_C, flag));

if (flag == 0)
   {
   printf ("\nEigenvalues...\n");
   for (j = 0; j < n; ++j)
      printf ("(%6.2f, %6.2f)\n",wr[j], wi[j]);
   printf ("\nCorrect eigenvalues 12.0, 1.0+-5i & 2.0\n");
   }

return (0);
}  /* end of main() */
@
