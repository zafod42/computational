head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	98.08.08.11.36.05;	author peterj;	state Exp;
branches;
next	;


desc
@CMATH 1989 code
@


1.1
log
@Initial revision
@
text
@/* fitpolyd.c
   Sample driver for Chebyshev polynomial fitting routine.
   */

#include <math.h>
#include <stdio.h>
#include "cmath.h"

main ()
{
int    i, flag;
double sums, yy;
#define  nd  28
double x[nd], y[nd], w[nd];
#define  m  7
double a, b, c[m];

/* Data points, (x, y) and weight */

x[0] = 0.20;  x[1] = 0.34;  x[2] = 0.47;  x[3] = 0.60;
x[4] = 0.74;  x[5] = 0.90;  x[6] = 1.09;  x[7] = 1.32;
x[8] = 1.60;  x[9] = 1.70;  x[10] = 1.90; x[11] = 2.25;
x[12] = 2.60; x[13] = 2.95; x[14] = 3.10; x[15] = 3.65;
x[16] = 4.00; x[17] = 4.66; x[18] = 5.15; x[19] = 5.64;
x[20] = 6.17; x[21] = 7.00; x[22] = 8.00; x[23] = 9.00;
x[24] = 10.0; x[25] = 11.0; x[26] = 12.0; x[27] = 13.0;

y[0] = 0.00;  y[1] = 1.00;  y[2] = 2.00;  y[3] = 3.00;
y[4] = 4.00;  y[5] = 5.00;  y[6] = 6.00;  y[7] = 7.00;
y[8] = 8.00;  y[9] = 8.24;  y[10] = 8.62; y[11] = 9.00;
y[12] = 9.10; y[13] = 9.00; y[14] = 8.90; y[15] = 8.50;
y[16] = 8.15; y[17] = 7.50; y[18] = 7.00; y[19] = 6.50;
y[20] = 6.00; y[21] = 5.30; y[22] = 4.54; y[23] = 3.89;
y[24] = 3.39; y[25] = 2.96; y[26] = 2.56; y[27] = 2.20;

w[0] = 0.20;   w[1] = 0.20;   w[2] = 0.20;   w[3] = 0.20;
w[4] = 0.30;   w[5] = 0.50;   w[6] = 0.70;   w[7] = 0.80;
w[8] = 0.90;   w[9] = 1.00;   w[10] = 1.00;  w[11] = 1.00;
w[12] = 1.00;  w[13] = 1.00;  w[14] = 1.00;  w[15] = 0.90;
w[16] = 0.80;  w[17] = 0.70;  w[18] = 0.50;  w[19] = 0.60;
w[20] = 0.70;  w[21] = 0.90;  w[22] = 1.00;  w[23] = 1.00;
w[24] = 1.00;  w[25] = 1.00;  w[26] = 1.00;  w[27] = 1.00;

printf ("\n\n  --- CMATH --- Design Software 1989\n");
printf ("\nTest program for fitpoly().\n");

a = 0.2;
b = 13.0;
fitpoly (nd, x, y, w, a, b, m, c, &flag);
printf ("%s\n", cmathmsg(FITPOLY_C, flag));

if (flag == 0)
   {
   printf ("\nFitted Chebyshev coefficients ...\n");
   printf ("    i       c[i]   \n");
   printf ("-------------------\n");

   for (i = 0; i < m; ++i)
      printf ("%5d  %10.3f\n", i, c[i]);

   printf ("\n    i     x[i]      y[i]      w[i]     cheby\n");
   printf ("-----------------------------------------------\n");

   sums = 0.0;
   for (i = 0; i < nd; ++i)
      {
      yy = cheby (x[i], a, b, c, m, &flag);
      if (flag != 0) printf ("%s\n", cmathmsg(CHEBY_C, flag));
      printf ("%5d %9.3f %9.3f %9.3f %9.3f\n",
               i, x[i], y[i], w[i], yy);
      yy -= y[i];
      sums += w[i] * yy * yy;
      }
   sums /= (double) nd;
   printf ("\nweighted sum of residuals = %10.2e\n", sums);
   }

return (0);
}
@
